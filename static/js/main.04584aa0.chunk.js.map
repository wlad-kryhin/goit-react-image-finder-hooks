{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","useState","image","setImage","className","e","preventDefault","trim","type","value","onChange","currentTarget","toLowerCase","placeholder","ImageGalleryItem","images","onClick","map","id","webformatURL","tags","src","alt","ImageGallery","find","Button","Modal","photo","toggleModal","backDropRef","createRef","useEffect","handleEscModal","evt","code","window","addEventListener","removeEventListener","current","target","largeImageURL","App","imageName","setImageName","setImages","page","setPage","isLoading","setIsLoading","isOpen","setIsOpen","modalImg","setModalImg","setTimeout","fetch","then","response","ok","json","Promise","reject","Error","data","hits","length","toast","error","prevState","catch","message","finally","scrollTo","top","document","body","scrollHeight","behavior","filter","color","height","width","timeout","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","theme","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.04584aa0.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setImage(e.currentTarget.value.toLowerCase());\r\n  };\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (image.trim() === \"\") {\r\n      return;\r\n    }\r\n    onSubmit(image);\r\n    setImage(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={image}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n      {image === \"\" && (\r\n        <p className=\"text\"> Please, enter something in the search bar</p>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nexport default function ImageGalleryItem({ images, onClick }) {\r\n  return images.map(({ id, webformatURL, tags }) => {\r\n    return (\r\n      <li className=\"ImageGalleryItem\" onClick={() => onClick(id)} key={id}>\r\n        <img className=\"ImageGalleryItem-image\" src={webformatURL} alt={tags} />\r\n      </li>\r\n    );\r\n  });\r\n}\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n};\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ images, find }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      <ImageGalleryItem images={images} onClick={find} />\r\n    </ul>\r\n  );\r\n}\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  find: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onclick: PropTypes.func,\r\n};\r\n","import { createRef, useEffect } from \"react\";\r\n\r\nexport default function Modal({ photo, toggleModal }) {\r\n  const backDropRef = createRef();\r\n\r\n  const handleBackDrop = (evt) => {\r\n    const { current } = backDropRef;\r\n    if (current && current !== evt.target) return;\r\n    toggleModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleEscModal = (evt) => {\r\n      if (evt.code !== \"Escape\") return;\r\n      toggleModal();\r\n    };\r\n    window.addEventListener(\"keydown\", handleEscModal);\r\n    return () => window.removeEventListener(\"keydown\", handleEscModal);\r\n  }, [toggleModal]);\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleBackDrop}>\r\n      <div className=\"Modal\">\r\n        <img\r\n          src={photo.largeImageURL}\r\n          alt={photo.tags}\r\n          className=\"modal__img\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal/Modal\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst KEY = \"22313175-89def84c9551dc3c20db3bc15\";\n\nconst App = () => {\n  const [imageName, setImageName] = useState(null);\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [modalImg, setModalImg] = useState([]);\n\n  useEffect(() => {\n    if (imageName === null) return;\n    setIsLoading(true);\n    setTimeout(() => {\n      fetch(\n        `https://pixabay.com/api/?q=${imageName}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n      )\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n\n          return Promise.reject(\n            new Error(`Запрос с именем ${imageName} не найден `),\n          );\n        })\n        .then((data) => data.hits)\n        .then((images) => {\n          if (images.length === 0) {\n            return toast.error(\n              \"Nothing found, please enter a correct keyword!\",\n            );\n          }\n          setImages((prevState) => [...prevState, ...images]);\n        })\n        .catch((error) => toast.error(error.message))\n        .finally(() => setIsLoading(false));\n    }, 1000);\n  }, [imageName, page]);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.body.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }, [images]);\n\n  const loadMore = () => {\n    setPage(page + 1);\n  };\n\n  const handleForm = (image) => {\n    setImages([]);\n    setImageName(image);\n    setPage(1);\n  };\n\n  const toggleModal = () => setIsOpen(!isOpen);\n\n  const findModalImage = (id) => {\n    setModalImg(images.filter((image) => image.id === id));\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleForm} />\n      {images.length > 0 && (\n        <ImageGallery images={images} find={findModalImage} />\n      )}\n      {/* {error && <h3 className=\"error\">{error}</h3>} */}\n      {images.length > 10 && <Button onClick={loadMore} />}\n      {isOpen && <Modal photo={modalImg[0]} toggleModal={toggleModal} />}\n      {isLoading && (\n        <div className=\"loader\">\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n          />\n        </div>\n      )}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2500}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        theme={\"colored\"}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}